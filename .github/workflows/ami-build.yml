name: Building AMI

on:
  push:
    branches:
      - main 

jobs:
  build:
    name: Building Machine Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with: 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Configure GCP Credentials
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDS }}

      - name: Setting GCP SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Setting GCP Access Key
        working-directory: ami
        run: | 
          echo '${{ secrets.GCP_CREDS }}' >> .gcp-key.json

      - name: Install Packer
        uses: hashicorp/setup-packer@main

      - name: Setting Environment Variables
        run: |
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "PORT=${{ secrets.PORT }}" >> .env
          cat .env
     
      - name: Build Application Artifact
        run: |
          mkdir -p build
          zip -r build/webapp.zip ./* .env # Include .env in the zip file
          ls -l build/webapp.zip # Debug: Verify the artifact is created

      - name: Copy Artifact and .env to AMI Directory
        run: |
          mkdir -p ami
          cp build/webapp.zip ami/webapp.zip
          cp .env ami/.env # Copy .env to the ami directory
          ls -l ami # Debug: Verify the contents of the ami directory

      - name: Packer Initialization
        working-directory: ami
        run: | 
          ls -l
          packer init .

      - name: Validate Packer Template
        working-directory: ami
        run: packer validate .

      - name: Build AMI with Packer
        working-directory: ami 
        env:
          PACKER_DB_NAME: ${{ secrets.DB_NAME }}
          PACKER_DB_USER: ${{ secrets.DB_USER }}
          PACKER_DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          packer build \
            -var "db_name=$PACKER_DB_NAME" \
            -var "db_user=$PACKER_DB_USER" \
            -var "db_password=$PACKER_DB_PASSWORD" \
            script.pkr.hcl
